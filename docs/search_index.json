[
["index.html", "Quantitative skills for biology Chapter 1 Introduction", " Quantitative skills for biology Chapter 1 Introduction Many biology-relevant skills are now performed using computers: statistical analyses, mathematical modelling, managing and reformatting data, visualizing data, identifying genes from DNA sequences, constructing 3D models of proteins, and making phylogenies. Quantitative skills and best practices in data science are now being incorporated throughout the biology major. Teaching quantitative skills is necessary since a survey reported that more than 90% of ecologists found that, in retrospect, their training in statistics and mathematics, during their undergraduate biology major, was too low (Barraquand et al. 2014). This same study found that practicing ecologists recommended that 30% of coursework during a biology major be dedicated to quantitative training. Today’s biologists use various software, particularly Microsoft Office, R, Python, and ArcGIS. In graduate research, many biologists use quantitative tools to do things like developing mathematical models to predict disease spread or population growth, apply bioinformatics analyses to genetics data to look at genetic relatedness between individuals, or use computer programming to model the structure of protein molecules. Much of this quantitative training manual teaches data manipulation and visualization in R. Our choice of R is for the following reasons: A valued skill: As of March 2019, R is the fifth ranked software listed in job advertisements for Data Scientists. Python is the number one ranked software, but R is a popular statistical software and is widespread in biology due to the need to analyze the results of experiments using statistics. Reproducibility: R is a scripting software, so unlike point and click softwares, the steps to produce a data analysis or figure are fully reproducible. Accessibility: R is free, unlike many statistical software packages that are quite expensive. This means that researchers or organizations, such as environmental NGOs, can still do sophisticated analysis with limited budgets. No limits: R has a large user community, and contributed packages allow you to do almost anything. R packages range from serious to fun). Popularity: A survey of studies from 30 ecology journals found that in 2017, 58% of articles used R as the primary tool to generate their results (Lai et al. 2019). "],
["howto.html", "Chapter 2 How to use this manual", " Chapter 2 How to use this manual "],
["install.html", "Chapter 3 R and R Studio 3.1 Installing R and RStudio 3.2 Using R via RStudio", " Chapter 3 R and R Studio R is a programming language for statistical computation and graphics. A user-friendly way to use R is through RStudio. RStudio is a Graphical User Interface (GUI) that facilitates R coding by providing buttons and menus for commonly used commands. A simple way of understanding the difference between R and RStudio is thinking of R like a car’s engine while RStudio is like a car’s dashboard, as depicted in Figure 3.1. In the same way as having access to instrumentation, gauges, controls, and a navigation system makes driving more comfortable, using RStudio’s interface makes using R easier (Ismay and Kim 2019). Similarly, R can be used without RStudio, but RStudio cannot be used without R. In this guide, we recommend and assume that you are using R via RStudio. Figure 3.1: Analogy of the difference between R and RStudio (Ismay and Kim 2019). 3.1 Installing R and RStudio Since RStudio is an add-on to R, you must first download and install R and then download and install RStudio. Follow these instructions in order: Download and install R from https://cloud.r-project.org/: If you are a Windows user: Click on “Download R for Windows”, then click on “base”, then click on the link “Download R X.X.X for Windows”. If you are macOS user: Click on “Download R for (Mac) OS X”, then look for “Latest release:” and click on the link to the left of the first paragraph “R-X.X.X.pkg”, If you are a Linux user: Click on “Download R for Linux”, choose your distribution and then your Linux version to find the installer for your setup. The X’s in the links above stand for the version number, which may be different for you depending on the date when you download the files. Download and install RStudio from https://rstudio.com/products/rstudio/download/#download. Under “All Installers” find your computer’s operating system (OS). Click on the corresponding download link. 3.1.1 RStudio Cloud If you prefer not installing additional software on your computer or are experiencing issues during the installation, we recommend using RStudio Cloud as an alternative. These are the steps that you have to follow: In a web browser, go to https://rstudio.cloud/plans/free. Sign up for the “Cloud Free” plan, then log in. You will be directed to a virtual dashboard called “Your Workspace”. Here, click on “New Project” to start working on a blank project. After a few seconds, you will see the RStudio console load in your browser. You can use this interface as you would use RStudio on your computer. Keep in mind that this is a web-based app; therefore, it may take a few minutes to load, and it could also slow down the browser’s speed. Both are normal; try to be patient. We are not doing intense calculations for the labs, so it will not take that long. 3.2 Using R via RStudio Now that you have installed R and RStudio on your computer, you will see that you have both new programs. We will always work in RStudio and not in the R application, as shown in Figure 3.2. Figure 3.2: Icons of R and RStudio on your computer (Ismay and Kim 2019). Remember to always click on RStudio! "],
["references.html", "References", " References "]
]
